

<div class="container">
    <div class="">
        <select id="subject-select" onchange="changeSubject()">
            <% subjects.forEach(subject => { %>
                <option label="<%= subject.title %>" value="<%= subject.title %>">
            <% }) %>
        </select>
    </div>
    
    <div class="stop-watch">
        <div class="timer">
            <p>
                <span id="hours">00</span>:
                <span id="minutes">00</span>:
                <span id="seconds">00</span>
            </p>
        </div>
        <div class="timer-btns">
            <button id="button-start" type="button" class="btn btn-primary">
                Start
            </button>
            <button id="button-stop" type="button" class="btn btn-warning">
                Pause
            </button>
            <button id="button-save" type="button" class="btn btn-success">
                Save
            </button>
            <button id="button-test" type="button" class="btn btn-secondary">
                Get test time
            </button>
        </div>
    </div>
</div>

<script id="worker-code" type="dont/run">
    setInterval(function() {postMessage("");}, 1000)
</script>

<script>
    var hours = 0;
    var minutes = 0;
    var seconds = 0;

    var appendHours = document.getElementById("hours");
    var appendMins = document.getElementById("minutes");
    var appendSecs = document.getElementById("seconds");

    var buttonStart = document.getElementById("button-start")
    var buttonStop = document.getElementById("button-stop")
    var buttonSave  =document.getElementById("button-save")
    var buttonTest  =document.getElementById("button-test")

    var curSelectedSub = document.getElementById("subject-select")
    var curTimingSub = ""
    
    // keeps track of the total time of the subject (To save)
    var total = 0; 
    // Overall time is so when switching subjects, stand/break reminders
    // will occur consistently with the required time
    var overallTime = 0;
    const TIME_TO_STAND = 60 * (20)
    const TIME_TO_BREAK = 60 * (40)

    var blob = new Blob([document.querySelector('#worker-code').textContent]);
    var worker = new Worker(window.URL.createObjectURL(blob));
    
    var isPaused = true;
    worker.onmessage = function() {
        if (!isPaused) {
            stopWatch() 
        }
    }

    onload = () => {
        curTimingSub = curSelectedSub.value
        if(!window.Notification) {
            console.log('Browser does not support notifications.');
        } else {
            if (Notification.permission ==="granted") {
                return;
            } else {
                Notification.requestPermission().then((p) => {
                    if (p === "granted") {
                        //show notif
                    } else {
                        console.log("User blocked notifications")
                    }
                }).catch((err) => {
                    console.log(err)
                })
            }
        }
    }

    buttonStart.onclick = () => { startStopWatch() }

    buttonStop.onclick = () => { pauseStopWatch() }

    buttonSave.onclick = () => { saveData() }

    function stopWatch() {
        seconds++;
        overallTime++;
        if (seconds < 10) {
            appendSecs.innerHTML = "0" + seconds;
        } else {
            appendSecs.innerHTML = seconds
        }
        if (seconds > 59) {
            console.log("Incremented,...")
            minutes++;
            appendSecs.innerHTML = "00";
            seconds=0;
            appendMins.innerHTML = "0" + minutes;
            //total+=60; // saves having to ++ total every second, now every minute
            // where we can add logic to save time of the subject into the db...  
        }
        if (overallTime % TIME_TO_STAND == 0) {
            notification("Time to stand up and stretch")
        }
        if (overallTime % TIME_TO_BREAK == 0) {
            notification("Time to take a break from: ", curSelectedSub)
        }
        if (minutes > 9) {
            appendMins.innerHTML = minutes;
        }
        if (minutes > 59) {
            minutes = 0;
            hours++;
            appendHours.innerHTML = "0" + hours
            appendMins.innerHTML = "00" 
        }
        if (hours <= 9) {
            appendHours.innerHTML = "0" + hours
        }
        if (hours > 9) {
            appendHours.innerHTML = hours
        }
    }

    function saveData() {
        saveTime()
        resetStopWatch()
        curTimingSub = document.getElementById("subject-select").value
        curTimingSub = curSelectedSub.value
    }

    function saveTime() {
        console.log(minutes)
        var url= '<%= process.env.SERVER %>';
        var data = {
            hours:hours,
            minutes:minutes,
            seconds:seconds, 
            subjectID:curTimingSub
        }
        const URL = `${url}/saveTime`;
        $(document).ready(function() {
            $.ajax({
                url: URL,
                type: "POST",
                data: data,
                success: function(result) {
                    console.log(result)
                },
                error: function(error) {
                    console.log(error)
                }
            })
        })
        console.log("Finished save")
    }

    function changeSubject() {
        curTimingSub = curSelectedSub.value
    }

    function startStopWatch() {
        if (curTimingSub == "") return; 
        if (isPaused == true) {
            // interval = setInterval(stopWatch, 1000);
            isPaused = false
        }
    }

    function pauseStopWatch() {
        if (curTimingSub == "") return;
        if (!isPaused) {
            clearInterval(worker)
            isPaused = true
        }
    }

    function resetStopWatch() {
        clearInterval(worker)
        hours=0;minutes=0;seconds=0;total=0;
        appendHours.innerHTML = "00"
        appendMins.innerHTML = "00"
        appendSecs.innerHTML = "00"
        isPaused = true
    }

    function notification(notif) {
        var notify = new Notification(notif)
    }

    function getAbsValue(startTime, endTime) {
        var total = endTime - startTime
        if (total < 0) {
            return Math.abs(total);
        }
        return total;
    }

</script>